package com.peace_da_ball;

public class Lecture {
	String lectures[] = {"Правила построения обратного кода по прямому и "
			+ "дополнительного по обратному.\n\n"
			+ "1. Обратный код для положительного числа совпадает с прямым кодом.\n"
			+ "Чтобы представить двоичное отрицательное число в обратном коде, нужно все цифры числа "
			+ "заменить на противоположные (1 на 0, 0 на 1), а в знаковый разряд поставить единицу.\n"
			+ "2. Дополнительный код положительного числа совпадает с прямым кодом.\n"
			+ "Для отрицательного числа дополнительный код образуется путем получения обратного кода и"
			+ " добавлением к младшему разряду единицы.\n\n"
			+ "Сложение чисел с фиксированной точкой в обратном коде.\n\n"
			+ "1. При алгебраическом сложении двух двоичных чисел с использованием"
			+ " обратного кода положительные слагаемые представляются в прямом коде, а"
			+ " отрицательные – в обратном и производится арифметическое суммирование"
			+ " этих кодов, включая разряды знаков, которые при этом рассматриваются как"
			+ " старшие разряды.\n"
			+ "2. При возникновении переноса из разряда знака единица переноса"
			+ " прибавляется к младшему разряду суммы кодов.\n"
			+ "3. В результате получается алгебраическая сумма в прямом коде, если сумма"
			+ " положительна, и в обратном коде, если сумма отрицательна.\n\n"
			+ "Сложение чисел с фиксированной точкой в дополнительном коде.\n\n"
			+ "1. При алгебраическом сложении двух двоичных чисел с использованием"
			+ " дополнительного кода положительные слагаемые представляются в прямом"
			+ " коде, а отрицательные – в дополнительном и производится арифметическое"
			+ " суммирование этих кодов, включая разряды знаков, которые при этом"
			+ " рассматриваются как старшие разряды.\n"
			+ "2. При возникновении переноса из разряда знака единица переноса"
			+ " отбрасывается.\n"
			+ "3. В результате получается алгебраическая сумма в прямом коде, если сумма"
			+ " положительна, и в дополнительном коде, если сумма отрицательна.\n\n"
			+ "Сложение чисел с плавающей запятой.\n\n"
			+ "1. Производится выравнивание порядков чисел. Порядок меньшего (по"
			+ " модулю) числа принимается равным порядку большего, а мантисса меньшего"
			+ " числа сдвигается вправо на число S-ичных разрядов, равное разности"
			+ " порядков чисел.\n"
			+ "2. Производится сложение мантисс, в результате чего получается мантисса"
			+ " суммы.\n"
			+ "3. Порядок результата принимается равным порядку большего числа.\n"
			+ "4. Полученная сумма нормализуется.", 
			//1
			"Умножение чисел с фиксированной запятой в прямом коде.\n\n"
			+ "1. Для выполнения операции берутся модули сомножителей, представленные"
			+ " в прямом коде |X|пр (далее – множимое) и |Y|пр (далее – множитель).\n"
			+ "2. Исходное значение суммы частичных произведений принимается равным"
			+ " нулю Sm = 0.\n"
			+ "3. Обрабатываются цифровые разряды множителя, начиная с младшего"
			+ " разряда. Если анализируемая цифра множителя равна 1, то к сумме"
			+ " частичных произведений Sm прибавляется множимое |X|пр с выравниванием;"
			+ " если эта цифра равна 0, прибавление не производится.\n"
			+ "4. Производится сдвиг суммы частичных произведений Sm вправо на один"
			+ " разряд и переход к следующему разряду множителя |Y|пр.\n"
			+ "5. Пункты 3 – 4 последовательно выполняются для всех цифровых разрядов"
			+ " множителя, начиная с младшего, по окончании – переход к п. 6.\n"
			+ "6. Сумма частичных произведений Sm дополнительно сдвигается вправо на 1"
			+ " разряд для правильной постановки произведения в двойной разрядной сетке."
			+ " В результате в Sm сформирован модуль результата |Z|пр.\n"
			+ "7. Oпределяется знак произведения путем сложения знаковых разрядов"
			+ " сомножителей по модулю два и заносится в знаковый разряд результата."
			+ " Результатом алгоритма умножения является произведение операндов,"
			+ " представленное в прямом коде Zпр.\n\n"
			+ "Умножение чисел с фиксированной запятой в дополнительном коде.\n\n"
			+ "1. Для выполнения операции положительные сомножители представляются"
			+ " прямым кодом, а отрицательные - дополнительным.\n"
			+ "2. Исходное значение суммы частичных произведений принимается равным"
			+ " нулю Sm = 0.\n"
			+ "3. Обрабатываются цифры множителя, начиная с младшего разряда. Если"
			+ " анализируемая цифра множителя равна 1, то к сумме частичных"
			+ " произведений Sm прибавляется множимое X с выравниванием; если эта"
			+ " цифра равна 0, прибавление не производится.\n"
			+ "4. Производится модифицированный сдвиг суммы частичных произведений"
			+ " Sm вправо на 1 разряд и переход к следующему разряду множителя Y.\n"
			+ "5. Пункты 3 – 4 последовательно выполняются для всех цифровых разрядов"
			+ " множителя, начиная с младшего, по окончании – переход к п. 6.\n"
			+ "6. Анализируется знаковый разряд множителя. Если множитель отрицателен,"
			+ " то для получения произведения к результату прибавляется (с выравниванием"
			+ " по старшим разрядам) множимое с обратным знаком, представленное"
			+ " соответствующим кодом (положительное – прямым, а отрицательное –"
			+ " дополнительным). Если множитель положителен, то никаких действий не"
			+ " производится.\n"
			+ "7. Для правильной постановки произведения в двойной разрядной сетке"
			+ " выполняется модифицированный сдвиг суммы частичных произведений Sm "
			+ "на 1 разряд вправо."
			+ " Результатом алгоритма умножения является сформированное в Sm"
			+ " произведение операндов Z в прямом коде, если оно положительно, или в"
			+ " дополнительном, если оно отрицательно.\n\n"
			+ "Умножение чисел с плавающей запятой.\n\n"
			+ "При перемножении чисел с плавающей запятой мантисса произведения"
			+ " определяется как произведение мантисс сомножителей, а порядок"
			+ " произведения равен сумме порядков сомножителей.\n"
			+ "1. Перед началом умножения мантиссы сомножителей проверяются на"
			+ " равенство нулю. Если одна из мантисс равна 0, то сразу формируется"
			+ " нулевой результат.\n"
			+ "2. Выполняется перемножение мантисс по алгоритму умножения чисел с"
			+ " фиксированной запятой. Полученная мантисса произведения сразу"
			+ " проверяется на нормализацию. При умножении нормализованных мантисс"
			+ " нарушение нормализации возможно только на 1 разряд вправо,"
			+ " (минимальный результат произведения получаем при перемножении модулей"
			+ " нормализованных мантисс со знаком: 0.100.. * 0.100.. = 0.010…). В этом"
			+ " случае мантисса произведения сдвигается на 1 разряд влево, а порядок"
			+ " одного из сомножителей уменьшается на 1.\n"
			+ "3. Выполняется суммирование порядков сомножителей (с учетом коррекции,"
			+ " выполненной в п.2). Если при этом выявляется переполнение разрядной"
			+ " сетки порядка результата, исполнение программы прерывается."
			+ " а) Если Ррез &lt; – Рmax, то порядку и мантиссе присваиваются нулевые"
			+ " значения и выставляется прерывание по причине исчезновения порядка."
			+ " б) Если Ррез &gt; + Рmax, то остановка решения с признаком переполнения."
			+ " Поскольку при перемножении чисел, представленных в формате с"
			+ " плавающей запятой, разрядность представления не меняется, то при"
			+ " представлении результата ограничивают мантиссу одинарной разрядностью.", 
			//2
			"Перевод чисел с фиксированной запятой из 2 в 4, 8, 10, 16.\n\n"
			+ "1. Для перевода числа из двоичной системы счисления в четверичную"
			+ " необходимо разбить это число вправо и влево от точки на группы по 2"
			+ " разряда и представить каждую группу цифрой в четверичной системы"
			+ " счисления. Крайние неполные группы дополняют нулями.\n"
			+ "2. Для перевода числа из двоичной системы счисления в восьмеричную"
			+ " необходимо разбить это число вправо и влево от точки на группы по 3"
			+ " разряда (триады) и представить каждую группу цифрой в восьмеричной"
			+ " системе счисления. Крайние неполные триады дополняют нулями.\n"
			+ "3. Для перевода числа из двоичной системы счисления в десятичную"
			+ " необходимо это число представить в виде суммы произведений степеней"
			+ " основания двоичной системы счисления на соответствующие цифры в"
			+ " разрядах двоичного числа.\n"
			+ "4. Для перевода числа из двоичной системы счисления в шестнадцатеричную"
			+ " необходимо разбить это число вправо и влево от точки на группы по 4"
			+ " разряда (тетрады) и представить каждую группу цифрой в"
			+ " шестнадцатеричной системе счисления. Крайние неполные тетрады"
			+ " дополняют нулями.\n\n"
			+ "Перевод чисел с фиксированной запятой из 4, 8, 16 в 2.\n\n"
			+ "1. Для перевода числа из четверичной системы счисления в двоичную"
			+ " необходимо каждую цифру этого числа записать двузначным двоичным"
			+ " кодом, так как 4 = 2 во 2 степени.\n"
			+ "2. Для перевода числа из восьмеричной системы счисления в двоичную"
			+ " необходимо каждую цифру этого числа записать трёхзначным двоичным"
			+ " числом (триадой), так как 8 = 2 в 3 степени.\n"
			+ "3. Для перевода числа из шестнадцатеричной системы счисления в двоичную"
			+ " необходимо каждую цифру этого числа заменить четырёхзначным двоичным"
			+ " числом (тетрадой), так как 16 = 2 в 4 степени.\n\n"
			+ "Перевод чисел с фиксированной запятой из 10 в любую.\n\n"
			+ "Для перевода в систему счисления с основанием q десятичное число с"
			+ " фиксированной запятой разделяется на целую часть и дробную часть"
			+ " (правильную дробь). Каждая часть переводится в систему счисления по"
			+ " своему алгоритму.\n"
			+ "1. Чтобы перевести целое число из десятичной системы счисления в систему"
			+ " счисления q, необходимо последовательно делить исходное число, а затем"
			+ " полученные частные на основание q новой системы до тех пор, пока не"
			+ " получится частное меньше основания q. Число в новой системе записывается"
			+ " в виде последовательности остатков от деления, начиная с последнего.\n"
			+ "2. Чтобы перевести правильную дробь из десятичной системы счисления в"
			+ " систему счисления с основанием q, необходимо последовательно умножать"
			+ " исходную дробь и дробные части получающихся произведений на основание"
			+ " q новой системы счисления."
			+ " Правильная дробь в новой системе счисления с основанием q формируется из"
			+ " целых частей получающихся произведений, записанных после запятой в"
			+ " порядке их получения.\n"
			+ "3. Процесс перевода можно закончить, если в результате очередного"
			+ " умножения появится дробная часть, имеющая во всех разрядах нули. При"
			+ " переводе правильных дробей возможно получение бесконечной дроби. В"
			+ " этом случае процесс заканчивается при достижении заданной точности"
			+ " перевода, т.е. когда получено требуемое количество разрядов дробной части"
			+ " результата."};
	/*
     * ID's list:
     * 0 - codes and sum
     * 1 - multiplication
     * 2 - number systems
     */
	public String getLecture(String id) {
		return lectures[Integer.parseInt(id)];
	}
}